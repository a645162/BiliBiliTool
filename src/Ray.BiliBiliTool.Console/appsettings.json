{
  //Cookie信息，取自浏览器，必填，优先级低于命令行中的配置值
  "BiliBiliCookie": {
    "CookieStr": "sid=jtaw6x68; bsource=search_baidu; _uuid=D1734EE6-9C2F-5189-8E2F-860D65FD851976556infoc; buvid3=372B1D7D-7FF8-40E5-A901-6095ADAE9C23138397infoc; LIVE_BUVID=AUTO3016054095024201; CURRENT_FNVAL=80; blackside_state=1; CURRENT_QUALITY=120; rpdid=|(u)~~k|u)l)0J'uY|Yk~~)uJ; PVID=1; fingerprint=96e3134e50e3ee3d6bb26b6855d6a605; buvid_fp=372B1D7D-7FF8-40E5-A901-6095ADAE9C23138397infoc; buvid_fp_plain=372B1D7D-7FF8-40E5-A901-6095ADAE9C23138397infoc; DedeUserID=10931556; DedeUserID__ckMd5=66336ddd60b8432d; SESSDATA=b455684e%2C1625746572%2C27efb*11; bili_jct=a5f88254588b0c1cd456c16b8fd466ba; ab.storage.userId.7af503ae-0c84-478f-98b0-ecfff5d67750=%7B%22g%22%3A%221101378%22%2C%22c%22%3A1611468662112%2C%22l%22%3A1611468662112%7D; ab.storage.deviceId.7af503ae-0c84-478f-98b0-ecfff5d67750=%7B%22g%22%3A%22df24a299-d502-e7ab-b0b3-7d754ec21056%22%2C%22c%22%3A1611468662118%2C%22l%22%3A1611468662118%7D; ab.storage.sessionId.7af503ae-0c84-478f-98b0-ecfff5d67750=%7B%22g%22%3A%228474c306-0088-e27f-c6f1-de84374471e2%22%2C%22e%22%3A1611759872813%2C%22c%22%3A1611758072814%2C%22l%22%3A1611758072814%7D" //Cookie字符串，登录bilibili后F12，点击任意接口，从 Headers—>Request Headers—>cookie 获取，如"_uuid=abcd; buvid3=1234; sid=abc123"
  },

  //程序自定义个性化配置
  "DailyTaskConfig": {
    "NumberOfCoins": 5, //每日设定的投币数 [0,5]
    "SelectLike": true, //投币时是否同时点赞[false,true]
    "SupportUpIds": "178778949,50329118,50329220", //优先选择支持的up主Id集合，多个以英文逗号分隔，如："123,456"。配置后会优先从指定的up主下挑选视频进行观看、分享和投币，不配置或配置为-1则表示没有特别支持的up，会从关注和排行耪中随机获取支持视频
    "DayOfAutoCharge": -1, //每月几号自动充电的[-1,31]，-1表示不指定，默认月底最后一天；0表示不充电
    "AutoChargeUpId": "-1", //指定支持的UP主Id，-1表示自己
    "ChargeComment": "加油~", //充电后留言
    "DayOfReceiveVipPrivilege": 1, //每月几号自动领取会员权益的[-1,31]，-1表示不指定，默认每月1号；0表示不自动领取
    "IsExchangeSilver2Coin": true, //是否开启直播中心银瓜子兑换硬币[false,true]
    "DevicePlatform": "android" //执行客户端操作时的平台 [ios,android]
  },

  //安全相关配置
  "Security": {
    "IsSkipDailyTask": false, //是否跳过执行任务，用于特殊情况下，通过配置灵活的开启和关闭任务
    "RandomSleepMaxMin": 0, //随机睡眠的最大时长，用于使每天运行时间在范围内相对随机，值域[0,]，配置为0则不仅型休眠
    "IntervalSecondsBetweenRequestApi": 3, //两次调用api之间间隔的秒数[0,+]。因为有人担心在几秒内连续调用api会被b站安全机制发现，所以为不放心的朋友添加了间隔秒数配置，两次连续调用Api之间会大于该秒数
    "IntervalMethodTypes": "GET,POST", //间隔秒数所针对的HttpMethod，多个用英文逗号隔开，当前有GET和POST两种，可配置如“GET,POST”。服务器一般对GET请求不是很敏感，建议只针对POST请求做间隔就可以了
    "UserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36 Edg/87.0.664.41", //请求B站接口时头部传递的User-Agent
    "WebProxy": "" //代理
  },

  //日志
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.Debug",
      "Serilog.Sinks.File",
      "Ray.Serilog.Sinks.TelegramBatched",
      "Ray.Serilog.Sinks.WorkWeiXinBatched",
      "Ray.Serilog.Sinks.DingTalkBatched",
      "Ray.Serilog.Sinks.ServerChanBatched",
      "Ray.Serilog.Sinks.CoolPushBatched",
      "Ray.Serilog.Sinks.OtherApiBatched"
    ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Microsoft.AspNetCore": "Warning"
      }
    },
    "WriteTo": [
      //0.Console
      {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Information",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      //1.Debug
      { "Name": "Debug" },
      //2.File
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log.txt",
          "restrictedToMinimumLevel": "Verbose",
          "rollingInterval": 3
        }
      },
      //3.Telegram机器人
      {
        "Name": "TelegramBatched",
        "Args": {
          "botToken": "1647704697:AAG1BtaEKjLYJ1FLuC5iCD4igzRBWh8GReg",
          "chatId": "1305457262",
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //4.企业微信机器人
      {
        "Name": "WorkWeiXinBatched",
        "Args": {
          "webHookUrl": "",
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //5.钉钉机器人
      {
        "Name": "DingTalkBatched",
        "Args": {
          "webHookUrl": "",
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //6.Server酱
      {
        "Name": "ServerChanBatched",
        "Args": {
          "scKey": "SCU125734T3817b9b65346dc3e81754f23c524e28d5fabd20516452",
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //7.酷推
      {
        "Name": "CoolPushBatched",
        "Args": {
          "sKey": "25d902a0d6ef4dec61c7d7ec7fe6ecbc",
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //8.自定义Api
      {
        "Name": "OtherApiBatched",
        "Args": {
          "api": "",
          "placeholder": "#msg#", //占位符
          "bodyJsonTemplate": "{\"msgtype\":\"markdown\",\"markdown\":{\"content\":#msg#}}", //json模板，会当作post的body，占位符会被日志内容替换（日志文本为json字符串，已经带有引号，所有模板中占位符不用使用引号包裹，如例子所示为企业微信的标准推送格式）
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
  },

  "IsPrd": false,
  "CloseConsoleWhenEnd": "0" //运行结束后是否立即关闭
}
